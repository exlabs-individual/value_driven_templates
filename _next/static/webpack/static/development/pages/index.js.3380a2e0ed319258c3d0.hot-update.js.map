{"version":3,"file":"static/webpack/static/development/pages/index.js.3380a2e0ed319258c3d0.hot-update.js","sources":["webpack:///./src/ui/layout/layout.provider.tsx"],"sourcesContent":["import React from 'react';\nimport { Layout } from './layout.styles';\nimport { useDeviceDetect } from '../../hooks/use-device-detect/use-device-detect.hook';\nimport { Header as MobileHeader } from '../../app/home/mobile-header/header.component';\nimport { MobileMenuStateProvider } from '../../providers/mobile-menu.provider';\nimport { Menu } from '../mobile-menu/menu.component';\nimport { Header as DesktopHeader } from '../../app/home/desktop-header/header.component';\n\nexport const LayoutProvider = ({ children }: { children: React.ReactNode }) => {\n  const { isMobile } = useDeviceDetect();\n\n  console.log(isMobile);\n\n  return (\n    <Layout>\n      <style jsx global>\n        {`\n          html,\n          body {\n            margin: 0;\n            padding: 0;\n            font-family: 'Montserrat', sans-serif;\n            background-color: #f9f9f9;\n            position: fixed;\n            width: 100%;\n            top: 0px;\n            min-height: 100%;\n            height: 100%;\n            overflow: scroll;\n            -webkit-overflow-scrolling: touch;\n          }\n        `}\n      </style>\n\n      <React.Fragment>\n        {isMobile ? (\n          <MobileMenuStateProvider>\n            <React.Fragment>\n              <MobileHeader />\n              <Menu />\n              <div>{children}</div>\n            </React.Fragment>\n          </MobileMenuStateProvider>\n        ) : (\n          <div>\n            <DesktopHeader />\n            <div>{children}</div>\n          </div>\n        )}\n      </React.Fragment>\n    </Layout>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}