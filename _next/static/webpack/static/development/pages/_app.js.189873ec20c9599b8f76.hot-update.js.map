{"version":3,"file":"static/webpack/static/development/pages/_app.js.189873ec20c9599b8f76.hot-update.js","sources":["webpack:///./src/hooks/use-sticky-nav/use-sticky-nav.hook.ts"],"sourcesContent":["import React from 'react';\n\nexport enum ScrollDirection {\n  UP = 'up',\n  DOWN = 'down',\n}\n\ninterface UseStickyNavProps {\n  initialDirection?: ScrollDirection;\n  thresholdPixels?: number;\n  stickyRef: React.RefObject<HTMLElement>;\n}\n\nexport const useStickyNav = ({\n  initialDirection = ScrollDirection.DOWN,\n  thresholdPixels,\n  stickyRef,\n}: UseStickyNavProps) => {\n  const [scrollDirection, setScrollDirection] = React.useState<ScrollDirection>(\n    initialDirection\n  );\n  const [isSticky, setSticky] = React.useState(false);\n\n  React.useEffect(() => {\n    const threshold = thresholdPixels ?? 0;\n\n    let lastScrollPositon = 0;\n    let ticking = false;\n\n    const updateScrollDirection = () => {\n      if (Math.abs(window.pageYOffset - lastScrollPositon) < threshold) {\n        ticking = false;\n        return;\n      }\n\n      setScrollDirection(\n        window.pageYOffset > lastScrollPositon\n          ? ScrollDirection.DOWN\n          : ScrollDirection.UP\n      );\n\n      setSticky(\n        stickyRef.current &&\n          window.pageYOffset > stickyRef.current.getBoundingClientRect().top\n          ? true\n          : false\n      );\n\n      lastScrollPositon = window.pageYOffset > 0 ? window.pageYOffset : 0;\n      ticking = false;\n    };\n\n    const handleScroll = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(updateScrollDirection);\n        ticking = true;\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [initialDirection, thresholdPixels, stickyRef]);\n\n  return scrollDirection === ScrollDirection.UP && isSticky;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}