{"version":3,"file":"static/webpack/static/development/pages/_app.js.4643578de1b4452ce534.hot-update.js","sources":["webpack:///./src/hooks/use-sticky-nav/use-sticky-nav.hook.ts","webpack:///./src/layout/layout.provider.tsx"],"sourcesContent":["import React from 'react';\n\nexport enum ScrollDirection {\n  UP = 'up',\n  DOWN = 'down',\n}\n\ninterface UseStickyNavProps {\n  initialDirection?: ScrollDirection;\n  thresholdPixels?: number;\n  stickyRef: React.RefObject<HTMLElement>;\n}\n\nexport const useStickyNav = ({\n  initialDirection = ScrollDirection.DOWN,\n  thresholdPixels,\n  stickyRef,\n}: UseStickyNavProps) => {\n  const [scrollDirection, setScrollDirection] = React.useState<ScrollDirection>(\n    initialDirection\n  );\n  const [isSticky, setSticky] = React.useState(false);\n\n  React.useEffect(() => {\n    const threshold = thresholdPixels ?? 0;\n\n    let lastScrollPositon = 0;\n    let ticking = false;\n\n    const updateScrollDirection = () => {\n      if (Math.abs(window.pageYOffset - lastScrollPositon) < threshold) {\n        ticking = false;\n        return;\n      }\n\n      setScrollDirection(\n        window.pageYOffset > lastScrollPositon\n          ? ScrollDirection.DOWN\n          : ScrollDirection.UP\n      );\n\n      setSticky(\n        stickyRef.current &&\n          window.pageYOffset > stickyRef.current.getBoundingClientRect().top\n          ? true\n          : false\n      );\n\n      lastScrollPositon = window.pageYOffset > 0 ? window.pageYOffset : 0;\n      ticking = false;\n    };\n\n    const handleScroll = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(updateScrollDirection);\n        ticking = true;\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [initialDirection, thresholdPixels, stickyRef]);\n\n  return { scrollDirection, isSticky };\n};\n","import React from 'react';\nimport { Layout, BodyContainer } from './layout.styles';\nimport { useDeviceDetect } from '../hooks/use-device-detect/use-device-detect.hook';\nimport { Header as MobileHeader } from '../ui/mobile-header/header.component';\nimport { Menu } from '../ui/mobile-menu/menu.component';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '../theme/theme.config';\nimport { useMobileMenuState } from '../hooks/use-mobile-menu/use-mobile-menu.hook';\nimport { Footer } from '../ui/footer/footer';\nimport { DesktopNavigation } from '../ui/desktop-navigation/desktop-navigation.component';\nimport {\n  useStickyNav,\n  ScrollDirection,\n} from '../hooks/use-sticky-nav/use-sticky-nav.hook';\n\nexport const LayoutProvider = ({ children }: { children: React.ReactNode }) => {\n  const { isMobile } = useDeviceDetect();\n  const {\n    state: { isVisible },\n  } = useMobileMenuState();\n  const stickyRef = React.useRef(null);\n\n  const { isSticky, scrollDirection } = useStickyNav({ stickyRef });\n\n  const isStickyNav = isSticky && scrollDirection === ScrollDirection.UP;\n\n  return (\n    <Layout>\n      <style jsx global>\n        {`\n          html,\n          body {\n            margin: 0;\n            padding: 0;\n            font-family: 'Montserrat', 'Open Sans', sans-serif;\n            background-color: #f9f9f9;\n            -webkit-overflow-scrolling: touch;\n          }\n        `}\n      </style>\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <BodyContainer>\n            {isMobile ? (\n              <React.Fragment>\n                <MobileHeader />\n                {isVisible && <Menu />}\n                <div>{children}</div>\n              </React.Fragment>\n            ) : (\n              <div>\n                {isStickyNav && (\n                  <div style={{ width: '100%', height: '72px' }}></div>\n                )}\n                <DesktopNavigation\n                  theme={isStickyNav ? 'primary' : 'secondary'}\n                  isSticky={isStickyNav}\n                />\n                <div ref={stickyRef}>{children}</div>\n              </div>\n            )}\n          </BodyContainer>\n          <Footer />\n        </React.Fragment>\n      </ThemeProvider>\n    </Layout>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}