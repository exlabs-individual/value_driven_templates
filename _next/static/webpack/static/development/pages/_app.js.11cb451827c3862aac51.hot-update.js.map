{"version":3,"file":"static/webpack/static/development/pages/_app.js.11cb451827c3862aac51.hot-update.js","sources":["webpack:///./src/layout/layout.provider.tsx","webpack:///./src/ui/desktop-navigation/desktop-navigation.component.tsx","webpack:///./src/ui/desktop-navigation/desktop-navigation.styles.ts","webpack:///./src/ui/special-link/special-link.component.tsx","webpack:///./src/ui/special-link/special-link.styles.ts"],"sourcesContent":["import React from 'react';\nimport { Layout, BodyContainer } from './layout.styles';\nimport { useDeviceDetect } from '../hooks/use-device-detect/use-device-detect.hook';\nimport { Header as MobileHeader } from '../ui/mobile-header/header.component';\nimport { Menu } from '../ui/mobile-menu/menu.component';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '../theme/theme.config';\nimport { useMobileMenuState } from '../hooks/use-mobile-menu/use-mobile-menu.hook';\nimport { Footer } from '../ui/footer/footer';\nimport { DesktopNavigation } from '../ui/desktop-navigation/desktop-navigation.component';\n\nexport const LayoutProvider = ({ children }: { children: React.ReactNode }) => {\n  const { isMobile } = useDeviceDetect();\n  const {\n    state: { isVisible },\n  } = useMobileMenuState();\n\n  return (\n    <Layout>\n      <style jsx global>\n        {`\n          html,\n          body {\n            margin: 0;\n            padding: 0;\n            font-family: 'Montserrat', 'Open Sans', sans-serif;\n            background-color: #f9f9f9;\n            -webkit-overflow-scrolling: touch;\n          }\n        `}\n      </style>\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <BodyContainer>\n            {isMobile ? (\n              <React.Fragment>\n                <MobileHeader />\n                {isVisible && <Menu />}\n                <div>{children}</div>\n              </React.Fragment>\n            ) : (\n              <div>\n                <DesktopNavigation />\n                <div>{children}</div>\n              </div>\n            )}\n          </BodyContainer>\n          <Footer />\n        </React.Fragment>\n      </ThemeProvider>\n    </Layout>\n  );\n};\n","import React from 'react';\nimport Link from 'next/link';\nimport {\n  StyledNav,\n  NavigationContainer,\n  StyledList,\n} from './desktop-navigation.styles';\nimport { Logo } from '../logo/logo.component';\nimport { ThemeType } from '../../../types';\nimport { AppRoute } from '../../routing/app-routes';\nimport { SpecialLink } from '../special-link/special-link.component';\n\ninterface DesktopNavigationProps {\n  theme?: ThemeType;\n}\n\nexport const DesktopNavigation = ({\n  theme = 'primary',\n}: DesktopNavigationProps) => {\n  return (\n    <NavigationContainer className=\"navigation\" themeType={theme}>\n      <Logo theme={theme} />\n      <StyledNav>\n        <StyledList themeType={theme}>\n          <li className=\"nav-item\">\n            <Link href={AppRoute.ABOUT}>\n              <a className=\"nav-item__link\" href={AppRoute.ABOUT}>\n                About\n              </a>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link href={AppRoute.HOW_TO_CONTRIBUTE}>\n              <a className=\"nav-item__link\" href={AppRoute.HOW_TO_CONTRIBUTE}>\n                How to contribute?\n              </a>\n            </Link>\n          </li>\n          <li className=\"nav-item nav-item--primary\">\n            <SpecialLink\n              href=\"https://exlabs.com\"\n              label=\"Get in touch\"\n              target=\"blank\"\n              color=\"red\"\n            />\n          </li>\n        </StyledList>\n      </StyledNav>\n    </NavigationContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { ThemeType, ThemedProps } from '../../../types';\nimport { ThemeProps } from '../../theme/theme.config';\n\nexport const NavigationContainer = styled.div.attrs(\n  ({ themeType = 'primary' }: { themeType?: ThemeType }) => ({\n    themeType,\n  })\n)`\n  background-color: ${({ theme, themeType }: ThemedProps) =>\n    themeType === 'primary' ? theme.color.primary : 'inherit'};\n  padding: 10px ${({ theme }: ThemeProps) => theme.padding.small};\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyledNav = styled.nav``;\n\nexport const StyledList = styled.ul.attrs(\n  ({ themeType = 'primary' }: { themeType?: ThemeType }) => ({\n    themeType,\n  })\n)`\n  list-style: none;\n  display: flex;\n\n  & .nav-item {\n    margin-right: 20px;\n\n    &__link {\n      color: ${({ theme, themeType }: ThemedProps) =>\n        themeType === 'primary' ? theme.color.white : theme.color.black};\n      text-decoration: none;\n      font-size: ${({ theme }: ThemeProps) => theme.fontSize.medium};\n      font-weight: 700;\n    }\n  }\n\n  & > .nav-item:last-child {\n    margin-right: 0;\n  }\n`;\n","import React from 'react';\nimport Link from 'next/link';\nimport { StyledLink } from './special-link.styles';\n\ninterface SpecialLinkProps {\n  color?: 'primary' | 'red';\n  target?: 'self' | 'blank';\n  label: string;\n  href: string;\n}\n\nexport const SpecialLink = ({\n  color = 'primary',\n  target = 'self',\n  label,\n  href,\n}: SpecialLinkProps) => {\n  return (\n    <Link href={href}>\n      <>\n        {target === 'self' && (\n          <StyledLink color={color} href={href}>\n            {label}\n          </StyledLink>\n        )}\n        {target === 'blank' && (\n          <StyledLink\n            color={color}\n            href={href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {label}\n          </StyledLink>\n        )}\n      </>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\nimport { theme, ThemeProps } from '../../theme/theme.config';\n\ntype ColorType = 'primary' | 'red';\n\nconst linkColorMap: { [key in ColorType]: string } = {\n  primary: theme.color.primary,\n  red: theme.color.red,\n};\n\nconst hoverLinkColorMap: { [key in ColorType]: string } = {\n  primary: theme.color['dark-primary'],\n  red: theme.color['dark-red'],\n};\n\nexport const StyledLink = styled.a.attrs(\n  ({ color = 'primary' }: { color?: 'primary' | 'red' }) => ({ color })\n)`\n  background-color: ${(props) => linkColorMap[props.color]};\n  color: ${({ theme }: ThemeProps) => theme.color.white};\n  text-decoration: none;\n  padding: 10px 20px;\n  font-size: ${({ theme }: ThemeProps) => theme.fontSize.medium};\n  font-weight: 500;\n  border-radius: ${({ theme }: ThemeProps) => theme.defaultRadius};\n  transition: ${({ theme }: ThemeProps) =>\n    theme.transitionValue('background-color')};\n\n  &:hover {\n    background-color: ${(props) => hoverLinkColorMap[props.color]};\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AAKA;AAEA;AACA;AAMA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AADA;AADA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AADA;AAAA;AAAA;AAYA;AAAA;AAAA;AAGA;AAAA;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}