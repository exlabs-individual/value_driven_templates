{"version":3,"file":"static/webpack/static/development/pages/articles/[id].js.7c076c4dcc8bacda0a45.hot-update.js","sources":["webpack:///./src/hooks/use-device-detect/use-device-detect.hook.ts"],"sourcesContent":["import window from 'global';\nimport React from 'react';\n\ninterface DeviceDetectData {\n  isMobile: boolean;\n  isDesktop: boolean;\n  isTablet: boolean;\n}\n\nexport const useDeviceDetect = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = () => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  };\n\n  const [windowSize, setWindowSize] = React.useState(getSize);\n  const [deviceData, setDeviceData] = React.useState<DeviceDetectData>({\n    isMobile: true,\n    isDesktop: false,\n    isTablet: false,\n  });\n\n  React.useEffect(\n    () => {\n      if (!isClient) {\n        return;\n      }\n\n      function handleResize() {\n        setWindowSize(getSize());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  React.useEffect(() => {\n    if (windowSize.width <= 768) {\n      setDeviceData({\n        isMobile: true,\n        isDesktop: false,\n        isTablet: false,\n      });\n    } else if (windowSize.width >= 768 && windowSize.width <= 1100) {\n      setDeviceData({\n        isMobile: false,\n        isDesktop: false,\n        isTablet: true,\n      });\n    } else {\n      setDeviceData({\n        isMobile: false,\n        isDesktop: true,\n        isTablet: false,\n      });\n    }\n  }, [windowSize.width]);\n\n  return deviceData;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;;;;A","sourceRoot":""}