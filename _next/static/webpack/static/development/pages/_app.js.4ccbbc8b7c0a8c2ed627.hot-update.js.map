{"version":3,"file":"static/webpack/static/development/pages/_app.js.4ccbbc8b7c0a8c2ed627.hot-update.js","sources":["webpack:///./src/layout/layout.provider.tsx","webpack:///./src/ui/mobile-header/header.component.tsx","webpack:///./src/ui/mobile-header/header.styles.ts"],"sourcesContent":["import React from 'react';\nimport { Layout, BodyContainer } from './layout.styles';\nimport { useDeviceDetect } from '../hooks/use-device-detect/use-device-detect.hook';\nimport { Header as MobileHeader } from '../ui/mobile-header/header.component';\nimport { Menu } from '../ui/mobile-menu/menu.component';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '../theme/theme.config';\nimport { useMobileMenuState } from '../hooks/use-mobile-menu/use-mobile-menu.hook';\nimport { Footer } from '../ui/footer/footer';\n\nexport const LayoutProvider = ({ children }: { children: React.ReactNode }) => {\n  const { isMobile } = useDeviceDetect();\n  const {\n    state: { isVisible },\n  } = useMobileMenuState();\n\n  return (\n    <Layout>\n      <style jsx global>\n        {`\n          html,\n          body {\n            margin: 0;\n            padding: 0;\n            font-family: 'Montserrat', 'Open Sans', sans-serif;\n            background-color: #f9f9f9;\n            -webkit-overflow-scrolling: touch;\n          }\n        `}\n      </style>\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <BodyContainer>\n            {isMobile ? (\n              <React.Fragment>\n                <MobileHeader />\n                {isVisible && <Menu />}\n                <div>{children}</div>\n              </React.Fragment>\n            ) : (\n              <div>\n                <div>{children}</div>\n              </div>\n            )}\n          </BodyContainer>\n          <Footer />\n        </React.Fragment>\n      </ThemeProvider>\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { HeaderContainer, MenuContainer } from './header.styles';\nimport { useMobileMenuState } from '../../hooks/use-mobile-menu/use-mobile-menu.hook';\nimport { toggleMenu } from '../../context/mobile-menu/mobile-menu.action-creators';\nimport { Logo } from '../logo/logo.component';\n\nexport const Header = () => {\n  const {\n    state: { isVisible: isMenuVisible },\n    dispatch,\n  } = useMobileMenuState();\n\n  const onMenuClick = () => dispatch(toggleMenu());\n\n  return (\n    <HeaderContainer>\n      <Logo />\n      <MenuContainer>\n        <button className=\"menu-btn\" onClick={onMenuClick}>\n          <img\n            src={\n              isMenuVisible\n                ? `${process.env.ASSET_PREFIX}/close.svg`\n                : `${process.env.ASSET_PREFIX}/hamburger.svg`\n            }\n            alt=\"Hamburger menu\"\n            className=\"hamburger-icon\"\n          />\n        </button>\n      </MenuContainer>\n    </HeaderContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n  background: linear-gradient(90deg, #044aaf, #022558);\n  width: calc(100% - 40px);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: sticky;\n  position: -webkit-sticky;\n  top: 0;\n  z-index: 999;\n`;\n\nexport const MenuContainer = styled.div`\n  & > .menu-btn {\n    background-color: inherit;\n    border: 0;\n    outline: none;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}